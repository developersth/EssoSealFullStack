# Please refer https://aka.ms/HTTPSinContainer on how to setup an https developer certificate for your ASP.NET Core service.


version: '3.8'
services:

  database:
    container_name: mongodb
    image: mongo:latest
    restart: always
    ports:
      - "27017:27017"
    volumes:
      # - ./mongo/data:/data/db
      - database-volume:/data/db
    environment:
      - TZ=Asia/Bangkok
    networks:
      - app-network
  
  # database_sh:
  #   image: mongo:latest
  #   container_name: database_sh
  #   volumes:
  #     - ./data/dummy_db:/data/dummy_db
  #   depends_on:
  #     - database
  #   networks:
  #     - app-network
  #   command: 
  #     - /bin/bash
  #     - -c
  #     - |
  #       sleep 10
  #       /usr/bin/mongorestore --host database:27017 -d esso-mongo /dummy_db
  #       #sleep infinitely


  backend:
    container_name: backend-api
    image: backend-api
    build:
      context: .
      dockerfile: backend/Dockerfile
    environment:
      - MongoDbSettings__DatabaseName=esso_db
      - MongoDbSettings__CollectionName=User
      - MongoDbSettings__ConnectionString=mongodb://database:27017/
      - Jwt__Key=DhftOS5uphK3vmCJQrexST1RsyjZBjXWRgJMFPU4
      - Jwt__Issuer=https://localhost:5000/
      - Jwt__Audience=https://localhost:5000/
    ports:
      - 5000:5000
    depends_on:
      - database
    networks:
      - app-network

  # nginx:
  #   image: nginx:latest
  #   container_name: nginx_webserver
  #   ports:
  #     - "80:80"
  #     - "443:443"
  #   volumes:
  #     - ./nginx.conf:/etc/nginx/nginx.conf
  #   depends_on:
  #     - frontend
  #   restart: always

  app:
    image: 'jc21/nginx-proxy-manager:latest'
    restart: unless-stopped
    ports:
      - '80:80'
      - '81:81'
      - '443:443'
    volumes:
      - ./data:/data
      - ./letsencrypt:/etc/letsencrypt

  frontend:
    container_name: frontend-angular
    image: frontend-angular:1.0
    build:
      context: ./frontend
      dockerfile: Dockerfile
    restart: always
    ports:
      - '8080:80'
    environment:
      - TZ=Asia/Bangkok
    depends_on:
      - backend
    networks:
      - app-network

networks:
  app-network:
    name : app-network

volumes:
  database-volume:
    name : database-volume
    external : false
  app-volume:
    name : app-volume
    external : false

